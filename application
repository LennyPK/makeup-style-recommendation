import sys
from PyQt5.QtWidgets import QApplication, QMainWindow, QLabel, QPushButton, QButtonGroup, QVBoxLayout, QWidget, QRadioButton

class QuizApp(QMainWindow):
    def __init__(self, questions, options, answers):
        super().__init__()

        self.setWindowTitle("Quiz App")
        self.setGeometry(100, 100, 600, 400)

        self.questions = questions
        self.options = options
        self.answers = answers
        self.user_responses = [None] * len(questions)
        self.current_question = 0

        self.central_widget = QWidget(self)
        self.setCentralWidget(self.central_widget)

        self.layout = QVBoxLayout()

        self.question_label = QLabel(self.questions[self.current_question], self)
        self.layout.addWidget(self.question_label)

        self.option_buttons = QButtonGroup()

        for i, option in enumerate(self.options[self.current_question]):
            radio_button = QRadioButton(option, self)
            self.option_buttons.addButton(radio_button, i)
            self.layout.addWidget(radio_button)

        self.next_button = QPushButton("Next", self)
        self.next_button.clicked.connect(self.next_question)
        self.layout.addWidget(self.next_button)

        self.central_widget.setLayout(self.layout)

    def next_question(self):
        selected_button = self.option_buttons.checkedButton()
        if selected_button:
            self.user_responses[self.current_question] = self.options[self.current_question].index(selected_button.text())
        if self.current_question < len(self.questions) - 1:
            self.current_question += 1
            self.update_question()
        else:
            self.calculate_score()

    def update_question(self):
        self.question_label.setText(self.questions[self.current_question])
        for i, option in enumerate(self.options[self.current_question]):
            self.option_buttons.buttons()[i].setText(option)

    def calculate_score(self):
        score = 0
        for i in range(len(self.questions)):
            if self.user_responses[i] == self.answers[i]:
                score += 1
        result_message = f"You got {score} out of {len(self.questions)} questions correct."
        result_label = QLabel(result_message, self)
        self.layout.addWidget(result_label)

if __name__ == "__main__":
    questions = [
        "1. Which one better describes your face shape?",
        "2. How would you describe your jawline?",
        # Add more questions here
    ]

    options = [
        ["rounded", "oval", "pear", "square", "heart", "diamond", "rectangle", "oblong"],
        [
            "very soft and rounded", "slightly soft and rounded", "rounded but soft", 
            "slightly angular but mostly soft", "not too round", "not too sharp", 
            "slightly sharp and angular", "extremely bony"
        ],
        # Add more options here
    ]

    answers = ["A", "C", "E", "B", "D", "G", "F", "H", "D", "A", "B", "C", "B", "E", "A"]

    app = QApplication(sys.argv)
    window = QuizApp(questions, options, answers)
    window.show()
    sys.exit(app.exec_())
